{"version":3,"sources":["components/LocationField.tsx","components/SportDropdown.tsx","components/TextInput.tsx","components/TextArea.tsx","components/PostCodeSearch.tsx","components/Submit.tsx","components/SetPassword.tsx","components/CoachRegistration.tsx","components/CoachLogin.tsx","components/Calendar.tsx","components/Booking.tsx","components/BookingList.tsx","components/Dropdown.tsx","components/Modal.tsx","components/CoachAvailibility.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["LocationField","props","state","getLocation","bind","navigator","geolocation","getCurrentPosition","position","longLat","longitude","coords","latitude","updateParent","this","fieldData","className","htmlFor","onClick","React","Dropdown","sports","dropdownVisible","fetch","method","then","response","json","data","map","sport","name","setState","changeOption","showDropDownItems","fieldName","label","id","e","option","key","findIndex","entry","toOption","preventDefault","dropdownToggle","TextInput","textInputChange","event","target","value","type","inputType","required","isRequired","onChange","TextArea","PostCodeSearch","postcode","postcodeInputChange","location","result","updateLocation","Submit","sendResults","buttonName","SetPassword","passwordOne","passwordTwo","passwordOneChange","passwordTwoChange","passwordChange","validatePassword","password","length","toUpperCase","toLowerCase","isNaN","parseFloat","isFinite","CoachRegistration","firstName","lastName","email","phone","dob","address1","address2","town","county","qualifications","yearsCoaching","expertise","updateFirstName","updateLastName","updateEmail","updatePhone","updateDateOfBirth","updatePostcode","updateAddress1","updateAddress2","updateTown","updateCounty","updateQualifications","updateYearsTraining","updateSport","updateAreaOfExpertise","updatePassword","newFName","newLName","newEmail","newPhone","newDOB","newLoc","newAddr1","newAddr2","newTown","newCounty","newPS","newQuals","newYT","newSport","newAOE","newPass","headers","body","JSON","stringify","window","href","CoachLogin","updateEmailAddress","newEmailAddress","newPassword","a","status","localStorage","setItem","token","alert","Calendar","handleDayClick","selectedDay","Date","day","chooseDate","onDayClick","Booking","startTime","endTime","BookingList","bookings","booking","options","Modal","updateStartTime","slotStartTime","updateEndTime","slotEndTime","repeat","newRepeat","ageGroup","newAgeGroup","hourlyRate","newRate","addSlot","String","getItem","toggleModal","date","toISOString","split","toLocaleDateString","Component","CoachAvailibility","updateSelectedDate","dateClicked","selectedDate","isDateSelected","correctDateFormat","request","slots","console","log","openModal","modalDisplay","Navbar","to","App","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.378938c9.chunk.js","sourcesContent":["import * as React from \"react\"\nimport { Location } from '../interfaces/Location'\n\nexport interface LocationFieldProps {updateParent(newLoc: Location): void, fieldData: Location | null}\n\nexport class LocationField extends React.Component<LocationFieldProps, {}> {\n    constructor(props: any){\n        super(props)\n        this.state = {}\n        this.getLocation = this.getLocation.bind(this)\n    }\n\n    getLocation() {\n        navigator.geolocation.getCurrentPosition((position) => {\n            let longLat: Location = {\n                longitude: position.coords.longitude,\n                latitude: position.coords.latitude\n            }\n            this.props.updateParent(longLat)\n        })\n    }\n\n    render() {\n        if (this.props.fieldData) {\n            return (\n                <div className=\"locationField\">\n                    <label htmlFor=\"locationField\">Location:</label>\n                    <p>{this.props.fieldData.latitude}, {this.props.fieldData.longitude}</p>\n                    <button onClick={this.getLocation} className=\"btn btn-danger\">\n                        Get Location\n                    </button>\n                </div>\n            )\n        }\n        return (\n        <div className=\"locationField\">\n            <label htmlFor=\"locationField\">Location:</label>\n            <p></p>\n            <button onClick={this.getLocation} className=\"btn btn-danger\">\n                Get Location\n            </button>\n        </div>)\n    }\n}","import * as React from \"react\"\n\nexport interface DropdownProperties {\n    fieldName: string, \n    label: string,\n    updateParent(newSport: string) : void\n}\nexport interface DropdownState {dropdownVisible : boolean, fieldData: string}\n\nexport class Dropdown extends React.Component<DropdownProperties, DropdownState> {\n\n    sports: Array<string>\n\n    constructor(props: any) {\n        super(props)\n        this.state = { dropdownVisible: false, fieldData: '' }\n        this.sports = []\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/sport',{\n            method: \"GET\",\n        }).then((response: any) => {\n            return response.json()\n        }).then(response=>{\n            this.sports = response.data.sports.map((sport: any)=>{return sport.name})\n            this.setState({fieldData: this.sports[0]})\n            this.changeOption = this.changeOption.bind(this)\n            this.showDropDownItems = this.showDropDownItems.bind(this)\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"dropdownContainer\">\n                <label htmlFor={this.props.fieldName}>{this.props.label}</label>\n                <div id={this.props.fieldName} className=\"dropdown\">\n                    <div className=\"selectedItem btn btn-danger dropdown-toggle\" \n                    onClick={(e) => this.showDropDownItems(e)}>\n                        {this.state.fieldData}\n                    </div>\n                    {this.state.dropdownVisible && <div className=\"dropdownItems\">\n                        {this.sports.map((option) =>{\n                            return (\n                                <div className=\"dropdownItem\" \n                                key={this.sports.findIndex((entry)=>entry===option)} \n                                onClick={(e) => this.changeOption(e, option)}>\n                                    {option}\n                                </div>\n                            )\n                        })}\n                    </div>}\n                </div>\n            </div>\n        )\n    }\n\n    changeOption(e: React.MouseEvent, toOption : string) : void {\n        e.preventDefault()\n        this.setState({\n            dropdownVisible: false,\n            fieldData: toOption\n        })\n        this.props.updateParent(toOption)\n    }\n\n    showDropDownItems(e: React.MouseEvent) : void {\n        e.preventDefault()\n        let dropdownToggle = !(this.state.dropdownVisible)\n        this.setState({\n            dropdownVisible: dropdownToggle\n        })\n    }\n}\n","import * as React from \"react\"\n\nexport interface TextInputProps {\n    label : string, \n    fieldName : string, \n    fieldData : string | number,\n    inputType : string,\n    isRequired : boolean,\n    updateParent(fieldData: string | number): void\n}\n\nexport class TextInput extends React.Component<TextInputProps, {}> {\n    constructor(props: any) {\n        super(props)\n        this.textInputChange = this.textInputChange.bind(this)\n    }\n\n    // Event here must be cast as any to avoid a typescript bug where the target of a React.ChangeEvent does not\n    // have a value attribute\n    textInputChange(event: any){\n        this.setState({fieldData: event.target.value})\n        this.props.updateParent(event.target.value)\n    }\n\n    render() {\n        return (\n            <div className=\"formItem\">\n                <label htmlFor={this.props.fieldName}>{this.props.label}</label>\n                <input \n                    className=\"form-control\"\n                    type={this.props.inputType} \n                    name={this.props.fieldName} \n                    id={this.props.fieldName}\n                    required={this.props.isRequired} \n                    onChange={this.textInputChange} >\n                </input>\n            </div>\n        )\n    }\n\n\n}","import * as React from \"react\"\n\nexport interface TextAreaProps {\n    label : string, \n    fieldName : string, \n    fieldData : string | number\n    updateParent(fieldData: string | number): void\n}\n\nexport class TextArea extends React.Component<TextAreaProps, {}> {\n    constructor(props: any) {\n        super(props)\n        this.textInputChange = this.textInputChange.bind(this)\n    }\n\n    // Event here must be cast as any to avoid a typescript bug where the target of a React.ChangeEvent does not\n    // have a value attribute\n    textInputChange(event: any){\n        this.setState({fieldData: event.target.value})\n        this.props.updateParent(event.target.value)\n    }\n\n    render() {\n        return (\n            <div className=\"formItem\">\n                <label htmlFor={this.props.fieldName}>{this.props.label}</label>\n                <textarea\n                    className=\"form-control\" \n                    name={this.props.fieldName} \n                    id={this.props.fieldName} \n                    onChange={this.textInputChange}>\n                </textarea>\n            </div>\n        )\n    }\n\n\n}","import * as React from 'react'\n\ninterface Location {\n    latitude: number,\n    longitude: number\n}\nexport interface PostCodeSearchProperties {\n    updateLocation(newLoc: Location): void,\n    updateParent(newPS: string) : void,\n    isRequired : boolean\n}\nexport interface PostCodeSearchState {postcode: string}\n\nexport class PostCodeSearch extends React.Component<PostCodeSearchProperties, PostCodeSearchState> {\n    constructor(props: any) {\n        super(props);\n        this.state = { \n            postcode: ''\n        }\n        this.getLocation = this.getLocation.bind(this)\n        this.postcodeInputChange = this.postcodeInputChange.bind(this)\n    }\n\n    async getLocation(event: React.MouseEvent){\n        event.preventDefault()\n\n        let response = await fetch(`http://api.postcodes.io/postcodes/${this.state.postcode}`)\n        let location = await response.json()\n        let longLat: Location = {\n            longitude: location.result.longitude,\n            latitude: location.result.latitude\n        }\n        this.props.updateLocation(longLat)\n    }\n\n    // Event here must be cast as any to avoid a typescript bug where the target of a React.ChangeEvent does not\n    // have a value attribute\n    postcodeInputChange(event: any){\n        this.setState({postcode: event.target.value})\n        this.props.updateParent(event.target.value)\n    }\n\n    render() { \n        return ( \n            <form>\n                <label htmlFor ='postcode'>Postcode</label>\n                <input \n                    className=\"form-control\"\n                    type='text' \n                    onChange={this.postcodeInputChange} \n                    name='postcode' \n                    required={this.props.isRequired}/>\n                <input \n                    className=\"btn btn-danger\"\n                    type='submit' \n                    onClick={this.getLocation} \n                    value='Search'/>\n            </form>\n        );\n    }\n}","import * as React from \"react\"\n\nexport interface SubmitButtonProps {\n    sendResults(e: React.MouseEvent): void\n    buttonName: string\n}\n\nexport class Submit extends React.Component<SubmitButtonProps,{}> {\n    render() {\n        return(\n            <button onClick={(e) => this.props.sendResults(e)} className=\"btn btn-danger\">\n                {this.props.buttonName}\n            </button>\n        )\n    }\n}","import * as React from \"react\"\n\nexport interface SetPasswordProps {\n    updateParent(fieldData: string | number): void\n}\n\nexport interface SetPasswordState {\n    passwordOne: string,\n    passwordTwo: string\n}\n\nexport class SetPassword extends React.Component<SetPasswordProps, SetPasswordState> {\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            passwordOne: \"\",\n            passwordTwo: \"\"\n        }\n        this.passwordOneChange = this.passwordOneChange.bind(this)\n        this.passwordTwoChange = this.passwordTwoChange.bind(this)\n        this.passwordChange = this.passwordChange.bind(this)\n    }\n\n    // Event here must be cast as any to avoid a typescript bug where the target of a React.ChangeEvent does not\n    // have a value attribute\n    passwordOneChange(e: any) : void {\n        this.setState({passwordOne: e.target.value})\n        this.passwordChange(e.target.value, this.state.passwordTwo)\n    }\n\n    passwordTwoChange(e: any) : void {\n        this.setState({passwordTwo: e.target.value})\n        this.passwordChange(this.state.passwordOne, e.target.value)\n    }\n\n    passwordChange(passwordOne : string, passwordTwo: string) : void {\n        if (passwordOne === passwordTwo && this.validatePassword(passwordOne)) {\n            this.props.updateParent(passwordOne)\n        }\n    }\n\n    validatePassword(password: string) : boolean {\n        if (\n            password.length > 8 \n            && password.toUpperCase() !== password \n            && password.toLowerCase() !== password \n            && (isNaN(parseFloat(password)) || !isFinite(parseFloat(password)))\n        ) {return true}\n\n        return false\n    }\n\n    render() {\n        return (\n            <div className=\"passwordContainer\">\n                <label htmlFor=\"passwordOne\">Enter a Secure Password:</label>\n                <input \n                    className=\"form-control\"\n                    type=\"password\" \n                    name=\"passwordOne\" \n                    id=\"passwordOne\" \n                    onChange={this.passwordOneChange}\n                    required={true}>\n                </input>\n                <label htmlFor=\"passwordTwo\">Confirm Password:</label>\n                <input \n                    className=\"form-control\"\n                    type=\"password\" \n                    name=\"passwordTwo\" \n                    id=\"passwordTwo\" \n                    onChange={this.passwordTwoChange}\n                    required={true}>\n                </input>\n                <p>\n                    Passwords must be at least 8 characters long and must contain one each of: a lowercase letter,\n                    an uppercase letter, and a number.\n                </p>\n            </div>\n        )\n    }\n\n\n}","import * as React from \"react\"\n\nimport { Location } from '../interfaces/Location'\n\nimport { LocationField } from \"./LocationField\"\nimport { Dropdown } from \"./SportDropdown\"\nimport { TextInput } from \"./TextInput\"\nimport { TextArea } from \"./TextArea\"\nimport { PostCodeSearch } from \"./PostCodeSearch\"\nimport { Submit } from \"./Submit\"\nimport { SetPassword } from \"./SetPassword\"\n\nexport interface CoachRegistrationState {\n    firstName: string,\n    lastName: string,\n    email: string,\n    phone: string,\n    dob: string,\n    location: Location|null,\n    postcode: string,\n    address1: string,\n    address2: string,\n    town: string,\n    county: string,\n    qualifications: string,\n    yearsCoaching: number,\n    sport: string,\n    expertise: string,\n    password: string\n}\n\nexport class CoachRegistration extends React.Component<{},CoachRegistrationState> {\n    \n    constructor(props: any) {\n        super(props)\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phone: \"\",\n            dob: \"\",\n            location: null,\n            postcode: \"\",\n            address1: \"\",\n            address2: \"\",\n            town: \"\",\n            county: \"\",\n            qualifications: \"\",\n            yearsCoaching: 0,\n            sport: \"Rugby\",\n            expertise: \"\",\n            password: \"\"\n        }\n        this.updateFirstName=this.updateFirstName.bind(this)\n        this.updateLastName=this.updateLastName.bind(this)\n        this.updateEmail=this.updateEmail.bind(this)\n        this.updatePhone=this.updatePhone.bind(this)\n        this.updateDateOfBirth=this.updateDateOfBirth.bind(this)\n        this.updateLocation=this.updateLocation.bind(this)\n        this.updatePostcode=this.updatePostcode.bind(this)\n        this.updateAddress1=this.updateAddress1.bind(this)\n        this.updateAddress2=this.updateAddress2.bind(this)\n        this.updateTown=this.updateTown.bind(this)\n        this.updateCounty=this.updateCounty.bind(this)\n        this.updateQualifications=this.updateQualifications.bind(this)\n        this.updateYearsTraining=this.updateYearsTraining.bind(this)\n        this.updateSport=this.updateSport.bind(this)\n        this.updateAreaOfExpertise=this.updateAreaOfExpertise.bind(this)\n        this.updatePassword=this.updatePassword.bind(this)\n        this.sendResults=this.sendResults.bind(this)\n    }\n\n    updateFirstName(newFName: string) {this.setState({firstName: newFName})}\n    updateLastName(newLName: string) {this.setState({lastName: newLName})}\n    updateEmail(newEmail: string) {this.setState({email: newEmail})}\n    updatePhone(newPhone: string) {this.setState({phone: newPhone})}\n    updateDateOfBirth(newDOB: string) {this.setState({dob: newDOB})}\n    updateLocation(newLoc: Location) {this.setState({location: newLoc})}\n    updateAddress1(newAddr1: string) {this.setState({address1: newAddr1})}\n    updateAddress2(newAddr2: string) {this.setState({address2: newAddr2})}\n    updateTown(newTown: string) {this.setState({town: newTown})}\n    updateCounty(newCounty: string) {this.setState({county: newCounty})}\n    updatePostcode(newPS: string) {this.setState({postcode: newPS})}\n    updateQualifications(newQuals: string) {this.setState({qualifications: newQuals})}\n    updateYearsTraining(newYT: number) {this.setState({yearsCoaching: newYT})}\n    updateSport(newSport: string) {this.setState({sport: newSport})}\n    updateAreaOfExpertise(newAOE: string) {this.setState({expertise: newAOE})}\n    updatePassword(newPass: string) {this.setState({password: newPass})}\n    async sendResults (e: any) {\n        e.preventDefault(); \n        await fetch('http://localhost:3000/coach', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state)\n        })\n        window.location.href=\"/coachLogin\"\n    }\n\n    render() {\n        return(\n            <div className=\"root\">\n                <h1 className=\"pageHeading\">Welcome to Coach Red!</h1>\n                <p>To register as a coach, there are a few details we need from you</p>\n\n                <TextInput label=\"First Name\" fieldName=\"firstName\" fieldData={this.state.firstName}\n                inputType=\"text\" isRequired={true} updateParent={this.updateFirstName} />\n                <TextInput label=\"Last Name\" fieldName=\"lastName\" fieldData={this.state.lastName}\n                inputType=\"text\" isRequired={true} updateParent={this.updateLastName} />\n                <TextInput label=\"Email Address\" fieldName=\"email\" fieldData={this.state.email}\n                inputType=\"text\" isRequired={true} updateParent={this.updateEmail} />\n                <TextInput label=\"Phone Number\" fieldName=\"phone\" fieldData={this.state.phone}\n                inputType=\"tel\" isRequired={true} updateParent={this.updatePhone} />\n                <TextInput label=\"Date of Birth\" fieldName=\"dateOfBirth\" fieldData={this.state.dob}\n                inputType=\"date\" isRequired={true} updateParent={this.updateDateOfBirth} />\n                <LocationField updateParent={this.updateLocation} fieldData={this.state.location}/>\n                <PostCodeSearch updateLocation={this.updateLocation} updateParent={this.updatePostcode} \n                isRequired={true} />\n                <TextInput label=\"Address Line 1:\" fieldName=\"addressOne\" fieldData={this.state.address1}\n                inputType=\"text\" isRequired={true} updateParent={this.updateAddress1} />\n                <TextInput label=\"Address Line 2:\" fieldName=\"addressTwo\" fieldData={this.state.address2}\n                inputType=\"text\" isRequired={false} updateParent={this.updateAddress2} />\n                <TextInput label=\"City\" fieldName=\"town\" fieldData={this.state.town}\n                inputType=\"text\" isRequired={true} updateParent={this.updateTown} />\n                <TextInput label=\"County\" fieldName=\"county\" fieldData={this.state.county}\n                inputType=\"text\" isRequired={true} updateParent={this.updateCounty} />\n                <TextArea label=\"Tell us about you and your qualifications\" fieldName=\"qualifications\"\n                fieldData={this.state.qualifications} updateParent={this.updateQualifications} />\n                <TextInput label=\"How long have you been coaching?\" fieldName=\"yearsTraining\" \n                fieldData={this.state.yearsCoaching} inputType=\"number\"  isRequired={true} \n                updateParent={this.updateYearsTraining} />\n                <Dropdown label=\"What sport will you be coaching?\" fieldName=\"sport\"\n                updateParent={this.updateSport}/>\n                <TextInput label=\"What's your area of expertise?\" fieldName=\"areaOfExpertise\" \n                fieldData={this.state.expertise} inputType=\"text\" isRequired={true} \n                updateParent={this.updateAreaOfExpertise} />\n                <SetPassword updateParent={this.updatePassword}/>\n                <Submit sendResults={this.sendResults} buttonName=\"Register!\" />\n            </div>\n        )\n    }\n}\n","import * as React from 'react'\nimport {TextInput} from './TextInput'\nimport {Submit} from './Submit'\n\nexport interface CoachLoginProps {\n    \n}\n \nexport interface CoachLoginState {\n    email: string,\n    password: string\n}\n \nclass CoachLogin extends React.Component<CoachLoginProps, CoachLoginState> {\n    constructor(props: CoachLoginProps) {\n        super(props);\n        this.state = { \n            email: '',\n            password: ''\n        };\n    }\n\n    updateEmailAddress = (newEmailAddress : string) => {\n        this.setState({email: newEmailAddress})\n    }\n\n    updatePassword = (newPassword : string) => {\n        this.setState({password: newPassword})\n    }\n\n    sendResults = async (e : any) => {\n        e.preventDefault()\n        let response = await fetch('http://localhost:3000/coach/login', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(this.state)\n        })\n        let data = await response.json()\n        \n        if (data.status === 'success') {\n            localStorage.setItem('coachRedToken', data.data.token)\n            window.location.href = \"/coachAvailibility\"\n\n        } else {\n            alert('no chance')\n        }\n    }\n\n    render() { \n        return ( \n            <div className='root'>\n                 <TextInput label=\"Email Address\" fieldName=\"emailAddress\" fieldData={this.state.email}\n                inputType=\"text\" isRequired={true} updateParent={this.updateEmailAddress} />\n                 <TextInput label=\"Password\" fieldName=\"password\" fieldData={this.state.password}\n                inputType=\"password\" isRequired={false} updateParent={this.updatePassword} />\n                <Submit sendResults={this.sendResults} buttonName=\"Login\" />\n            </div>\n         );\n    }\n}\n \nexport default CoachLogin;","import * as React from \"react\"\n\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\n\nexport interface CalendarState {\n  selectedDay: Date,\n}\n\nexport interface CalendarProps {\n  chooseDate(date : Date) : void\n}\n\nexport default class Calendar extends React.Component <CalendarProps, CalendarState> {\n\n  constructor(props: CalendarProps) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: new Date()\n    };\n  }\n\n  handleDayClick(day: Date) {\n    this.setState({ selectedDay: day })\n  \n    this.props.chooseDate(day)\n  }\n\n  render() {\n    return(\n      <div id='dayPicker'>\n        <DayPicker onDayClick={this.handleDayClick} />\n      </div>\n    )}\n  \n}","import * as React from \"react\"\n\nexport interface BookingProps {\n  startTime: string,\n  endTime: string\n}\n\nexport default class Booking extends React.Component <BookingProps, {}> {\n\n  render() {\n    return(\n      <div className='booking'>\n        <span>\n          {this.props.startTime} - {this.props.endTime}\n        </span>\n        {/* <button className=\"btn btn-danger\">Details</button> */}\n      </div>\n    )}\n  \n}","import * as React from \"react\"\nimport Booking from \"./Booking\";\nimport { BookingInterface } from \"../interfaces/BookingInterface\"\n\nexport interface BookingListProps {\n  bookings: Array<any>\n}\n\nexport default class BookingList extends React.Component <BookingListProps, {}> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  \n  render() {\n    return(\n      <div className='bookings'>\n        {this.props.bookings.map((booking: BookingInterface) => {\n          return <Booking key={this.props.bookings.findIndex((entry)=>entry===booking)}\n          startTime={booking.startTime} endTime={booking.endTime}/>\n        })}\n        \n      </div>\n    )}\n  \n}","import * as React from \"react\"\n\nexport interface DropdownProperties {\n    fieldName: string, \n    label: string,\n    updateParent(newOption: string): void,\n    options: Array<string>\n}\nexport interface DropdownState {\n    dropdownVisible: boolean,\n    fieldData: string,\n\n}\n\nexport class Dropdown extends React.Component<DropdownProperties, DropdownState> {\n\n    constructor(props: any) {\n        super(props)\n        this.state = {\n            dropdownVisible: false,\n            fieldData: this.props.options[0],\n         \n        }\n    }\n\n    render() {\n        return (\n            <div className=\"dropdownContainer\">\n                <label htmlFor={this.props.fieldName}>{this.props.label}</label>\n                <div id={this.props.fieldName} className=\"dropdown\">\n                    <div className=\"selectedItem btn btn-danger dropdown-toggle\" \n                    onClick={(e) => this.showDropDownItems(e)}>\n                        {this.state.fieldData}\n                    </div>\n                    {this.state.dropdownVisible && <div className=\"dropdownItems\">\n                        {this.props.options.map((option) =>{\n                            return (\n                                <div className=\"dropdownItem\" \n                                key={this.props.options.findIndex((entry)=>entry===option)} \n                                onClick={(e) => this.changeOption(e, option)}>\n                                    {option}\n                                </div>\n                            )\n                        })}\n                    </div>}\n                </div>\n            </div>\n        )\n    }\n\n    changeOption(e: React.MouseEvent, toOption : string) : void {\n        e.preventDefault()\n        this.setState({\n            dropdownVisible: false,\n            fieldData: toOption\n        })\n        this.props.updateParent(toOption)\n    }\n\n    showDropDownItems(e: React.MouseEvent) : void {\n        e.preventDefault()\n        let dropdownToggle = !(this.state.dropdownVisible)\n        this.setState({\n            dropdownVisible: dropdownToggle\n        })\n    }\n}\n","import React, { Component } from 'react'\nimport { TextInput } from './TextInput'\nimport { Dropdown } from './Dropdown'\nimport { Submit } from './Submit';\n\nexport interface ModalState {\n startTime: string,\n endTime: string,\n repeat: string,\n hourlyRate: number,\n ageGroup: string,\n date: string\n}\n\nexport interface ModalProps {\n  date : Date,\n  toggleModal(): void\n}\n\nexport default class Modal extends Component<ModalProps, ModalState>{\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      date : this.props.date.toISOString().split('T')[0],\n      startTime: '',\n      endTime: '',\n      repeat: 'Once',\n      hourlyRate: 0,\n      ageGroup: 'Under 18s'\n    };\n  }\n\n  updateStartTime = (slotStartTime: string) => {\n    this.setState({startTime: slotStartTime })\n  }\n\n  updateEndTime = (slotEndTime: string) => {\n    this.setState({endTime: slotEndTime })\n  }\n\n  repeat = (newRepeat: string) => {\n    this.setState({repeat: newRepeat})\n  }\n\n  ageGroup = (newAgeGroup: string) => {\n    this.setState({ageGroup: newAgeGroup})\n  }\n\n  hourlyRate = (newRate: number) => {\n    this.setState({hourlyRate: newRate})\n  }\n\n  addSlot = () => {\n    fetch('http://localhost:3000/slot', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(localStorage.getItem('coachRedToken'))\n      },\n      body: JSON.stringify(this.state)\n    }).then((response) => {\n      return response.json()\n    }).then((response) => {\n      localStorage.setItem('coachRedToken', response.data.token)\n      this.props.toggleModal()\n    })\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h3>New Time slot for {this.props.date.toLocaleDateString()}</h3>\n        <TextInput label='Start Time' fieldName='startTime' fieldData={this.state.startTime} inputType='time' isRequired={true} updateParent={this.updateStartTime} />\n        <TextInput label='End Time' fieldName='endTime' fieldData={this.state.endTime} inputType='time' isRequired={true} updateParent={this.updateEndTime} />\n        <Dropdown label='Repeat?' fieldName='repeat' updateParent={this.repeat} options={['Once', 'Weekly', 'Fortnightly', 'Monthly']} />\n        <Dropdown label='Age Group?' fieldName='age' updateParent={this.ageGroup} options={['Under 18s', 'Adults']} />\n        <TextInput label='Hourly Rate (£)' fieldName=\"hourlyRate\" fieldData={this.state.hourlyRate} inputType='number' isRequired={true} updateParent={this.hourlyRate} />\n        <Submit sendResults={this.addSlot} buttonName='Add Slot' />\n\n        \n        \n      </div>\n    )\n  }\n}\n","import * as React from \"react\"\nimport Calendar from './Calendar'\nimport BookingList from './BookingList'\nimport Modal from './Modal'\nimport {CoachInterface }from '../interfaces/CoachInterface'\n\nexport interface CoachAvailibilityState {\n  modalDisplay: boolean\n  selectedDate: Date\n  isDateSelected: boolean\n  bookings: Array<any>\n}\n\nexport interface CoachAvailibilityProps {\n  coach: CoachInterface | null\n\n}\n\nexport class CoachAvailibility extends React.Component<CoachAvailibilityProps, CoachAvailibilityState> {\n    \n  constructor(props: CoachAvailibilityProps) {\n    super(props)\n\n      this.state = {\n        modalDisplay: false,\n        selectedDate: new Date(),\n        isDateSelected: false,\n        bookings: []\n      } \n  }\n\n  updateSelectedDate = async (dateClicked: Date) => {\n    this.setState({ selectedDate: dateClicked })\n    this.setState({isDateSelected: true})\n    const correctDateFormat = dateClicked.toISOString().split('T')[0]\n    const request = {\n      method: 'GET',\n      headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + String(localStorage.getItem('coachRedToken'))\n      }\n    }\n\n    let slots = await fetch(`http://localhost:3000/slot/${correctDateFormat}`, request)\n    if (slots.status === 403) {\n      console.log(await slots.json())\n      // window.location.href = 'coachLogin'\n    }\n    let response = await slots.json()\n    localStorage.setItem('coachRedToken', response.data.token)\n\n    this.setState({bookings: response.data.slots})\n  }\n\n \n  openModal = () => {\n    this.setState({ modalDisplay: (this.state.modalDisplay === true) ? false : true })\n    this.updateSelectedDate(this.state.selectedDate)\n    if (!this.state.modalDisplay) {\n      window.location.href=\"#newSlot\"\n    }\n  }\n\n\n\n  render() {\n      return(\n        <div className=\"coachAvailibility\">\n            <div className=\"calendar\">\n                < Calendar chooseDate={this.updateSelectedDate}/>\n            </div>\n              <div className=\"bookingsContainer\">\n                <div className=\"bookingList\">\n                    {!this.state.isDateSelected && <p>Please Select a Date</p>}\n                    {this.state.isDateSelected && < BookingList bookings={this.state.bookings}/>}\n                    {this.state.isDateSelected && <button className=\"btn btn-danger\" onClick={this.openModal}>Add Slot</button>}\n                </div>\n                <div id=\"newSlot\" className=\"newSlotModal\">\n                    {this.state.modalDisplay && < Modal date={this.state.selectedDate} toggleModal={this.openModal} />}\n                </div>\n            </div>\n        </div>\n      )\n  }\n}","import * as React from \"react\"\nimport {Link} from \"react-router-dom\"\n\nexport class Navbar extends React.Component {\n    render() {\n        return(\n        <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"#\">Coach Red</Link>\n            <ul className=\"navbar-nav mr-auto\">\n                <li>\n                    <Link className=\"nav-link\" to=\"/registerCoach\">Register a Coach</Link>\n                </li>\n            </ul>\n            <Link className=\"nav-link my-2 my-sm-0\" to=\"/coachLogin\">Coach Login</Link>\n        </nav>)\n    }\n}","import * as React from \"react\"\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\n\nimport {CoachRegistration} from \"./components/CoachRegistration\"\nimport CoachLogin from \"./components/CoachLogin\"\nimport { CoachAvailibility } from \"./components/CoachAvailibility\"\nimport {Navbar} from \"./components/Navbar\"\n\nexport class App extends React.Component {\n    \n    render() {\n        return(\n            <div className=\"page\">\n                <Router>\n                    <Navbar/>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"pageContent col-10 offset-1 bg-light\">\n                                <Switch>\n                                    <Route path=\"/registerCoach\" component={CoachRegistration}/>\n                                    <Route path=\"/coachLogin\" component={CoachLogin} />\n                                    <Route path=\"/coachAvailibility\" component={CoachAvailibility }/>\n                                    <Route path=\"/\" component={CoachRegistration}/>\n                                </Switch>\n                            </div>\n                        </div>\n                    </div>\n                    <footer className=\"footer bg-light\"><p><small>© Coach Red 2020</small></p></footer>\n                </Router>\n            </div>\n        )\n    }\n}\n","import * as React from \"react\"\nimport * as ReactDOM from \"react-dom\"\n\nimport { App } from \"./App\"\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n)\n\n "],"sourceRoot":""}